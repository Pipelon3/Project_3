{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\Project_3\\\\air_p_p\\\\client\\\\src\\\\components\\\\pottymap.js\";\n\n/* eslint-disable no-undef */\nimport React from \"react\";\nimport \"./home.css\";\nimport { withScriptjs, withGoogleMap, Marker, GoogleMap } from \"react-google-maps\";\nimport { compose, withProps, lifecycle } from \"recompose\";\n\nconst _ = require(\"lodash\");\n\nconst _require = require(\"react-google-maps/lib/components/places/SearchBox\"),\n      SearchBox = _require.SearchBox;\n\nconst PottyMap = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=\" + process.env.REACT_APP_AirPnP_API_KEY + \"&v=3.exp&libraries=geometry,drawing,places\",\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }),\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: \"400px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }),\n  mapElement: React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })\n}), lifecycle({\n  componentWillMount() {\n    const refs = {};\n    this.setState({\n      bounds: null,\n      center: {\n        lat: 41.9,\n        lng: -87.624\n      },\n      markers: [],\n      onMapMounted: ref => {\n        refs.map = ref;\n      },\n      // onBoundsChanged: () => {\n      //   this.setState({\n      //     bounds: refs.map.getBounds(),\n      //     center: refs.map.getCenter()\n      //   });\n      // },\n      onSearchBoxMounted: ref => {\n        refs.searchBox = ref;\n      },\n      onPlacesChanged: () => {\n        const places = refs.searchBox.getPlaces();\n        const bounds = new google.maps.LatLngBounds();\n        places.forEach(place => {\n          if (place.geometry.viewport) {\n            bounds.union(place.geometry.viewport);\n          } else {\n            bounds.extend(place.geometry.location);\n          }\n        });\n        const nextMarkers = places.map(place => ({\n          position: place.geometry.location\n        }));\n\n        const nextCenter = _.get(nextMarkers, \"0.position\", this.state.center);\n\n        this.setState({\n          center: nextCenter,\n          markers: nextMarkers\n        }); // refs.map.fitBounds(bounds);\n      }\n    });\n  },\n\n  componentWillUnmount() {\n    this.setState({});\n  }\n\n}), withScriptjs, withGoogleMap)(props => React.createElement(GoogleMap, {\n  defaultZoom: 8,\n  defaultCenter: {\n    lat: 40.5693337,\n    lng: -111.8965424\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82\n  },\n  __self: this\n}, React.createElement(SearchBox, {\n  ref: props.onSearchBoxMounted // bounds={props.bounds}\n  ,\n  controlPosition: google.maps.ControlPosition.TOP_LEFT,\n  onPlacesChanged: props.onPlacesChanged,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86\n  },\n  __self: this\n}, React.createElement(\"input\", {\n  type: \"text\",\n  placeholder: \"Find the perfect potty\",\n  style: {\n    boxSizing: \"border-box\",\n    border: \"1px solid transparent\",\n    width: \"600px\",\n    height: \"32px\",\n    marginTop: \"27px\",\n    padding: \"0 12px\",\n    borderRadius: \"3px\",\n    boxShadow: \"0 2px 6px rgba(0, 0, 0, 0.3)\",\n    fontSize: \"16px\",\n    outline: \"none\",\n    textOverflow: \"ellipses\",\n    background: \"white url(images/toilet-paper.png) no-repeat\",\n    backgroundPosition: \"right\",\n    backgroundSize: \"contain\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92\n  },\n  __self: this\n})), props.markers.map((marker, index) => React.createElement(Marker, {\n  key: index,\n  position: marker.position,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114\n  },\n  __self: this\n}))));\nexport default PottyMap;","map":{"version":3,"sources":["C:\\repos\\Project_3\\air_p_p\\client\\src\\components\\pottymap.js"],"names":["React","withScriptjs","withGoogleMap","Marker","GoogleMap","compose","withProps","lifecycle","_","require","SearchBox","PottyMap","googleMapURL","process","env","REACT_APP_AirPnP_API_KEY","loadingElement","height","containerElement","mapElement","componentWillMount","refs","setState","bounds","center","lat","lng","markers","onMapMounted","ref","map","onSearchBoxMounted","searchBox","onPlacesChanged","places","getPlaces","google","maps","LatLngBounds","forEach","place","geometry","viewport","union","extend","location","nextMarkers","position","nextCenter","get","state","componentWillUnmount","props","ControlPosition","TOP_LEFT","boxSizing","border","width","marginTop","padding","borderRadius","boxShadow","fontSize","outline","textOverflow","background","backgroundPosition","backgroundSize","marker","index"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\r\nimport React from \"react\";\r\nimport \"./home.css\";\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  Marker,\r\n  GoogleMap\r\n} from \"react-google-maps\";\r\nimport { compose, withProps, lifecycle } from \"recompose\";\r\nconst _ = require(\"lodash\");\r\nconst {\r\n  SearchBox\r\n} = require(\"react-google-maps/lib/components/places/SearchBox\");\r\n\r\nconst PottyMap = compose(\r\n  withProps({\r\n    googleMapURL:\r\n      \"https://maps.googleapis.com/maps/api/js?key=\" +\r\n      process.env.REACT_APP_AirPnP_API_KEY +\r\n      \"&v=3.exp&libraries=geometry,drawing,places\",\r\n    loadingElement: <div style={{ height: \"100%\" }} />,\r\n    containerElement: <div style={{ height: \"400px\" }} />,\r\n    mapElement: <div style={{ height: \"100%\" }} />\r\n  }),\r\n  lifecycle({\r\n    componentWillMount() {\r\n      const refs = {};\r\n      this.setState({\r\n        bounds: null,\r\n        center: {\r\n          lat: 41.9,\r\n          lng: -87.624\r\n        },\r\n        markers: [],\r\n        onMapMounted: ref => {\r\n          refs.map = ref;\r\n        },\r\n        // onBoundsChanged: () => {\r\n        //   this.setState({\r\n        //     bounds: refs.map.getBounds(),\r\n        //     center: refs.map.getCenter()\r\n        //   });\r\n        // },\r\n        onSearchBoxMounted: ref => {\r\n          refs.searchBox = ref;\r\n        },\r\n        onPlacesChanged: () => {\r\n          const places = refs.searchBox.getPlaces();\r\n          const bounds = new google.maps.LatLngBounds();\r\n          places.forEach(place => {\r\n            if (place.geometry.viewport) {\r\n              bounds.union(place.geometry.viewport);\r\n            } else {\r\n              bounds.extend(place.geometry.location);\r\n            }\r\n          });\r\n          const nextMarkers = places.map(place => ({\r\n            position: place.geometry.location\r\n          }));\r\n          const nextCenter = _.get(\r\n            nextMarkers,\r\n            \"0.position\",\r\n            this.state.center\r\n          );\r\n\r\n          this.setState({\r\n            center: nextCenter,\r\n            markers: nextMarkers\r\n          });\r\n          // refs.map.fitBounds(bounds);\r\n        }\r\n      });\r\n    },\r\n    componentWillUnmount() {\r\n      this.setState({});\r\n    }\r\n  }),\r\n  withScriptjs,\r\n  withGoogleMap\r\n)(props => (\r\n  <GoogleMap\r\n    defaultZoom={8}\r\n    defaultCenter={{ lat: 40.5693337, lng: -111.8965424 }}\r\n  >\r\n    <SearchBox\r\n      ref={props.onSearchBoxMounted}\r\n      // bounds={props.bounds}\r\n      controlPosition={google.maps.ControlPosition.TOP_LEFT}\r\n      onPlacesChanged={props.onPlacesChanged}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Find the perfect potty\"\r\n        style={{\r\n          boxSizing: `border-box`,\r\n          border: `1px solid transparent`,\r\n          width: `600px`,\r\n          height: `32px`,\r\n          marginTop: `27px`,\r\n          padding: `0 12px`,\r\n          borderRadius: `3px`,\r\n          boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\r\n          fontSize: `16px`,\r\n          outline: `none`,\r\n          textOverflow: `ellipses`,\r\n          background: `white url(images/toilet-paper.png) no-repeat`,\r\n          backgroundPosition: `right`,\r\n          backgroundSize: `contain`\r\n        }}\r\n      />\r\n    </SearchBox>\r\n    {props.markers.map((marker, index) => (\r\n      <Marker key={index} position={marker.position} />\r\n    ))}\r\n  </GoogleMap>\r\n));\r\n\r\nexport default PottyMap;\r\n"]},"metadata":{},"sourceType":"module"}